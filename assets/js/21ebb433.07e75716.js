"use strict";(self.webpackChunkclinext=self.webpackChunkclinext||[]).push([[8792],{5788:(e,n,t)=>{t.d(n,{Iu:()=>u,yg:()=>y});var r=t(1504);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)t=s[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),c=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(o.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,y=p["".concat(o,".").concat(d)]||p[d]||g[d]||s;return t?r.createElement(y,i(i({ref:n},u),{},{components:t})):r.createElement(y,i({ref:n},u))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,i=new Array(s);i[0]=d;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<s;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1444:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var r=t(5072),a=(t(1504),t(5788));const s={sidebar_position:5},i="Triggers",l={unversionedId:"reference/feature/triggers",id:"reference/feature/triggers",title:"Triggers",description:"Concept",source:"@site/docs/reference/feature/triggers.md",sourceDirName:"reference/feature",slug:"/reference/feature/triggers",permalink:"/docs/next/reference/feature/triggers",draft:!1,editUrl:"https://github.com/clinext-core/generator-clinext/tree/main/packages/create-docusaurus/templates/shared/docs/reference/feature/triggers.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Config",permalink:"/docs/next/reference/feature/configurations"},next:{title:"Engine APIs",permalink:"/docs/next/category/engine-apis"}},o={},c=[{value:"Concept",id:"concept",level:2},{value:"Folder structure",id:"folder-structure",level:2},{value:"Variant entry points",id:"variant-entry-points",level:2},{value:"Usage",id:"usage",level:2},{value:"Before save",id:"before-save",level:3},{value:"After save",id:"after-save",level:3},{value:"Before delete",id:"before-delete",level:3},{value:"After delete",id:"after-delete",level:3},{value:"Example",id:"example",level:2}],u={toc:c},p="wrapper";function g(e){let{components:n,...t}=e;return(0,a.yg)(p,(0,r.c)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"triggers"},"Triggers"),(0,a.yg)("h2",{id:"concept"},"Concept"),(0,a.yg)("p",null,"Contains the ."),(0,a.yg)("h2",{id:"folder-structure"},"Folder structure"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"\u251c\u2500\u2500 triggers\n\u2502   \u251c\u2500\u2500 beforeSave.js\n\u2502   \u251c\u2500\u2500 afterSave.js\n\u2502   \u251c\u2500\u2500 beforeDelete.js\n\u2502   \u251c\u2500\u2500 afterDelete.js\n\u2502   \u251c\u2500\u2500 beforeFind.js\n\u2502   \u251c\u2500\u2500 afterFind.js\n")),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"The ",(0,a.yg)("strong",{parentName:"li"},"index.js")," (or ",(0,a.yg)("strong",{parentName:"li"},"triggers.js"),") exports the triggers functions ")),(0,a.yg)("h2",{id:"variant-entry-points"},"Variant entry points"),(0,a.yg)("p",null,"None"),(0,a.yg)("h2",{id:"usage"},"Usage"),(0,a.yg)("p",null,"Default argument for all triggers"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:"left"},"Argument"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Type"),(0,a.yg)("th",{parentName:"tr",align:"left"},"Default value"),(0,a.yg)("th",{parentName:"tr",align:"left"}))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:"left"},"request"),(0,a.yg)("td",{parentName:"tr",align:"left"},"The Parse Server request"),(0,a.yg)("td",{parentName:"tr",align:"left"},"Object"),(0,a.yg)("td",{parentName:"tr",align:"left"},"{}"),(0,a.yg)("td",{parentName:"tr",align:"left"})))),(0,a.yg)("p",null,"Request content:\n|  Argument | Description | Type | Default value |\n|:--|:--|:--|:--|:--|\n| object | The Parse Server object | Object | {} |\n| original | The Parse Server object before it's modified | Object | {} |\n| context | The Parse Server context | Object | {} |"),(0,a.yg)("h3",{id:"before-save"},"Before save"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.yg)("h3",{id:"after-save"},"After save"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.yg)("h3",{id:"before-delete"},"Before delete"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.yg)("h3",{id:"after-delete"},"After delete"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"export default async (props) => {\n    const { request } = props\n    const { object } = request   \n}\n")),(0,a.yg)("h2",{id:"example"},"Example"),(0,a.yg)("p",null,"The ",(0,a.yg)("em",{parentName:"p"},"disposablechildrenable")," feature "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-js"},"import _ from 'underscore'\n//afterSave.js\nexport default async ({ request }) => {\n    const { object, original, context } = request\n\n    if (!object || !object.disposableChildren) {\n        return\n    }\n    const { dirtyKeys } = context\n    if (!dirtyKeys || !dirtyKeys.length) {\n        return\n    }\n\n    const items = object.disposableChildren()\n    if (!items || !items.length) {\n        return\n    }\n\n    const candidates = _.intersection(items, dirtyKeys)\n    if (!candidates || !candidates.length) {\n        return\n    }\n\n    await Promise.all(candidates.map(key => handleItem({ object, original, key })))\n}\n\nconst handleItem = async ({ object, original, key }) => {\n    if (!original) {\n        return\n    }\n\n    const previous = original.get(key)\n    const current = object.get(key)\n\n    if (Array.isArray(previous) || Array.isArray(current)) {\n        return handleArray({ previous, current })\n    }\n\n    const isFile = isFieldFile(previous)\n      | isFieldFile(current)\n\n    if (!isFile) {\n        return handleItemAsObject({\n            previous,\n            current\n        })\n    }\n\n    return handleItemAsFile({\n        previous,\n        current\n    })\n\n\n}\n\nconst handleArray = async ({ previous, current }) => {\n    const objects = missingObjectsBetweenArrays(previous, current)\n    //TODO: objects === 0 when [files]\n    if (!objects || !objects.length) {\n        return\n    }\n\n    if (isFieldFile(objects[0])) {\n        await Promise.all(objects.map(destroyItemAsFile))\n    } else {\n        await Promise.all(objects.map(destroyItemAsObject))\n    }\n}\n\nconst handleItemAsObject = async ({ previous, current }) => {\n    const objects = missingObjectsBetweenArrays([previous], [current])\n    //TODO: objects === 0 when [files]\n    if (!objects || !objects.length) {\n        return\n    }\n\n    await Promise.all(objects.map(destroyItemAsObject))\n}\n\nconst handleItemAsFile = async ({ previous, current }) => {\n    if (!previous) {\n        return\n    }\n\n    if (!current) {\n        return destroyItemAsFile(previous)\n    }\n\n    if (previous.name() !== current.name()) {\n        return destroyItemAsFile(previous)\n    }\n}\n\nconst missingObjectsBetweenArrays = (a, b) => {\n    if (!b || !b.length) {\n        return a\n    }\n\n    if (!a || !a.length) {\n        return []\n    }\n\n    let _a = a.filter(i => i)\n    let _b = b.filter(i => i)\n\n    const isFile = isFieldFile(_b[0])\n    if (isFile) {\n        return missingObjectsBetweenArraysFiles(_a, _b)\n    }\n    else {\n        return missingObjectsBetweenArraysObject(_a, _b)\n    }\n}\n\nconst missingObjectsBetweenArraysFiles = (a, b) => {\n    const bUrls = b.map(i => i.url())\n\n    return a.map(i => {\n        //TODO: handle files\n        if (!bUrls.includes(i.url())) {\n            return i\n        }\n        return null\n    }).filter(a => a)\n}\n\nconst missingObjectsBetweenArraysObject = (a, b) => {\n    const bIds = b.map(i => i.id)\n\n    return a.map(i => {\n        //TODO: handle files\n        if (!bIds.includes(i.id)) {\n            return i\n        }\n        return null\n    }).filter(a => a)\n}\n\nconst isFieldFile = (item) => {\n\n    if (!item) {\n        return false\n    }\n    return (item._name && item._url)\n}\n\nconst destroyItemAsObject = async i => {\n    try {\n        i.isDataAvailable && !i.isDataAvailable() && i.fetch && (await i.fetch({ useMasterKey: true })) // The check will skip files\n        await i.destroy({ useMasterKey: true })\n    } catch (e) {\n        console.error('Feature > dependentChildren > destroyItem', e.message)\n    }\n}\n\nconst destroyItemAsFile = async i => {\n    try {\n        await i.destroy({ useMasterKey: true })\n    } catch (e) {\n        console.error('Feature > dependentChildren > destroyItem', e.message)\n    }\n}\n\n")))}g.isMDXComponent=!0}}]);