"use strict";(self.webpackChunkclinext=self.webpackChunkclinext||[]).push([[8504],{46816:(e,a,r)=>{r.d(a,{c:()=>u});var t=r(45072),n=r(11504);const l=e=>{const{data:a}=e,{header:r,rows:t}=a;return n.createElement("table",null,n.createElement("thead",null,r.columns.map((e=>n.createElement("td",{key:e.id,className:"font-bold text-center"}," ",e.label," ")))),n.createElement("tbody",null,t.map((e=>n.createElement("tr",{key:e.id},e.columns.map((e=>n.createElement("td",{key:e.id,className:""},e.value))))))))},s=function(e){void 0===e&&(e={});const{name:a,url:r}=e;return n.createElement("div",{className:"           bg-slate-100 border border-customc-main                      rounded-lg           px-0 py-0        text-center      anakcss-affordance-base                               "},n.createElement("span",{className:"                                             "},`${a}`))},i=function(e){void 0===e&&(e={});const{name:a,url:r,tooltip:t}=e;return n.createElement("div",{className:" has-tooltip                                 "},t&&n.createElement("span",{className:"\n                tooltip\n                bg-slate-600\n                text-slate-100\n                rounded-full\n                shadow-lg \n                px-4 \n                p-2  \n                -mt-12\n                anakcss-affordance-base       \n            "},t),n.createElement("a",{href:`${r}`,className:" anakcss-affordance-base           hover:text-customc-main           no-underline  decoration-customc-main                                                  "},n.createElement("span",{className:"                                                         hover:text-customc-main                                 "},`${a}`)))},o=e=>{let{data:a,types:r}=e;const{header:t,rows:l}=a;let o=l.map((e=>{const{columns:a}=e,t=a.map(((e,a)=>{if(!e)return{id:a,value:n.createElement("span",null)};if("string"===typeof e)return{id:a,value:e};{const{type:t}=e;switch(t){case"boolean":return{id:a,value:n.createElement(s,{name:e.value?"True":"False"})};case"values":return{id:a,value:e.value.map((e=>n.createElement(s,{name:e})))};case"element":{const r=e.value;return{id:a,value:n.createElement(r,null)}}case"type":{const{value:t}=e;let l=r.items.filter((e=>e.id===t));if(!l||!l.length)break;l=l[0];const s=`${l.path}`,{mode:o}=e;let d=l.name;if("array"===o)d=`[${l.name}]`;return{id:a,value:n.createElement(i,{name:d,url:s,tooltip:l.description})}}}}return e}));return{...e,columns:t}}));return o=o.filter((e=>e)),{header:t,rows:o}},d=e=>e.filter(((a,r)=>e.indexOf(a)===r)),m=e=>{let{data:a,types:r,isPlain:t}=e;if(t)return o({data:a,types:r});const n=(e=>{let{data:a}=e;const{header:r,rows:t}=a;let n=[];return t.forEach((e=>{const a=Object.keys(e);n=n.concat(a)})),n=d(n),{header:r,rows:t.map(((e,r)=>({columns:a.header.columns.map((a=>{const{id:r}=a;return e[r]}))})))}})({data:a});return o({data:n,types:r})},u=e=>{const a=m({data:e.data,types:e.types,isPlain:e.isPlain});return n.createElement(l,(0,t.c)({},e,{data:a}))}},95820:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>u,contentTitle:()=>d,default:()=>f,frontMatter:()=>o,metadata:()=>m,toc:()=>p});var t=r(45072),n=(r(11504),r(95788)),l=r(46816),s=r(51944),i=r.n(s);const o={sidebar_position:6},d="Transformer",m={unversionedId:"reference/transformer",id:"version-1.0/reference/transformer",title:"Transformer",description:"Data structure & behavior",source:"@site/versioned_docs/version-1.0/reference/transformer.mdx",sourceDirName:"reference",slug:"/reference/transformer",permalink:"/documentation/docs/reference/transformer",draft:!1,editUrl:"https://github.com/clinext-core/generator-clinext/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.0/reference/transformer.mdx",tags:[],version:"1.0",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Validator",permalink:"/documentation/docs/reference/validator"},next:{title:"Packages",permalink:"/documentation/docs/reference/packages"}},u={},p=[{value:"Data structure &amp; behavior",id:"data-structure--behavior",level:2},{value:"Modes",id:"modes",level:3},{value:"In",id:"in",level:4},{value:"Out",id:"out",level:4},{value:"Display",id:"display",level:4},{value:"Create",id:"create",level:2},{value:"Use",id:"use",level:2},{value:"File based",id:"file-based",level:3},{value:"Inline",id:"inline",level:3},{value:"Template",id:"template",level:3}],c={toc:p},y="wrapper";function f(e){let{components:a,...r}=e;return(0,n.yg)(y,(0,t.c)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"transformer"},"Transformer"),(0,n.yg)("h2",{id:"data-structure--behavior"},"Data structure & behavior"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"A transformer's mode can either be display, in or out"),(0,n.yg)("li",{parentName:"ul"},"The ",(0,n.yg)("i",null,"transformers")," entry holds the information for these three types of transformation"),(0,n.yg)("li",{parentName:"ul"},"A display, in or out is an array of transformers"),(0,n.yg)("li",{parentName:"ul"},"The transformers will be called sequentially as per their order in the array")),(0,n.yg)("p",null,"Example"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"transformers: [\n    {\n        modes: ['in', 'display'],\n        id: \"capitalizeFirstLetter\",\n    },\n    {\n        modes: ['in', 'display'],\n        handler: ({ input }) => {\n            if(!input) {\n                return \"\"\n            }\n            return `{${input}}`\n        }\n    },\n    {\n        modes: ['out'],\n        template: `<%= destination %>/<%= featureId %>`\n    }\n]\n\n")),(0,n.yg)("h3",{id:"modes"},"Modes"),(0,n.yg)("h4",{id:"in"},"In"),(0,n.yg)("p",null,"An In transformer is applied to a value before it is presented to the inquirer."),(0,n.yg)("h4",{id:"out"},"Out"),(0,n.yg)("p",null,"An Out transformer is applied to a value after it is presented to the inquirer and filled by the user."),(0,n.yg)("h4",{id:"display"},"Display"),(0,n.yg)("p",null,"A Display transformer is applied to a value only for display formatting."),(0,n.yg)("h2",{id:"create"},"Create"),(0,n.yg)("p",null,"Create a project wide transformer in the form of a _cliNext file in ",(0,n.yg)("b",null,"src/transformers/{in|out|display}"),"."),(0,n.yg)(i(),{schema:{title:"Transformer schema",type:"object",description:"Allows for schema to be seen",properties:{_clinextType:{type:"string"},id:{type:"string",description:"Unique ID"},modes:{type:"array",enum:["in","out","display"],description:"Transformer modes"},description:{type:"string"},template:{type:"string"},handler:{type:"object",description:"Transformer modes"}},required:["modes"]},mdxType:"JSONSchemaViewer"}),(0,n.yg)("h2",{id:"use"},"Use"),(0,n.yg)("p",null,"You can declare a transformer in three different ways"),(0,n.yg)("h3",{id:"file-based"},"File based"),(0,n.yg)("p",null,"Pass the id of the transformer in the corresponding section of the ",(0,n.yg)("i",null,"transformers")," section."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"}," transformers: [\n   {\n      id: 'myDisplayTransformerId',\n      params: {\n        myParam1: true\n      }\n    }\n  ]\n")),(0,n.yg)(l.c,{types:{},data:{header:{columns:[{id:"parameter",label:"Parameter"},{id:"type",label:"Type"},{id:"description",label:"Description"},{id:"defaultValue",label:"Default value"},{id:"mandatory",label:"Mandatory"}]},rows:[{parameter:"id",type:"string",description:"Transformer id",defaultValue:"",mandatory:{type:"boolean",value:!0}},{parameter:"params",type:"object",description:"Transformer payload",defaultValue:"{}",mandatory:{type:"boolean",value:!1}},{parameter:"modes",type:"array",description:"Transformers modes",defaultValue:"",mandatory:{type:"boolean",value:!0}}]},mdxType:"ReferenceTable"}),(0,n.yg)("p",null,"Example"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"}," transformers: {\n    display: [{\n      id: 'isFolderEmpty',\n      params: {\n        excludeHiddenFiles: true\n      }\n    }]\n  }\n")),(0,n.yg)("h3",{id:"inline"},"Inline"),(0,n.yg)(l.c,{types:{},data:{header:{columns:[{id:"parameter",label:"Parameter"},{id:"type",label:"Type"},{id:"description",label:"Description"},{id:"defaultValue",label:"Default value"},{id:"mandatory",label:"Mandatory"}]},rows:[{parameter:"id",type:"string",description:"Transformer id",defaultValue:"",mandatory:{type:"boolean",value:!0}},{parameter:"params",type:"object",description:"Transformer payload",defaultValue:"{}",mandatory:{type:"boolean",value:!1}}]},mdxType:"ReferenceTable"}),(0,n.yg)("i",null,"Example"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"}," transformers: {\n    out: ['myOutTransformerId']\n  }\n")),(0,n.yg)("h3",{id:"template"},"Template"),(0,n.yg)(l.c,{types:{},data:{header:{columns:[{id:"parameter",label:"Parameter"},{id:"type",label:"Type"},{id:"description",label:"Description"},{id:"defaultValue",label:"Default value"},{id:"mandatory",label:"Mandatory"}]},rows:[{parameter:"id",type:"string",description:"Transformer id",defaultValue:"",mandatory:{type:"boolean",value:!0}},{parameter:"params",type:"object",description:"Transformer payload",defaultValue:"{}",mandatory:{type:"boolean",value:!1}}]},mdxType:"ReferenceTable"}),(0,n.yg)("i",null,"Example"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"transformers: {\n    out: [{\n        template: `<%= destination %>/<%= featureId %>`\n    }]\n}\n")))}f.isMDXComponent=!0}}]);