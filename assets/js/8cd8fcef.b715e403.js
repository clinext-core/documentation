"use strict";(self.webpackChunkclinext=self.webpackChunkclinext||[]).push([[7870],{95788:(e,t,n)=>{n.d(t,{Iu:()=>c,yg:()=>y});var r=n(11504);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(n),m=o,y=p["".concat(u,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},64980:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(45072),o=(n(11504),n(95788));const a={sidebar_position:3},i="Store answers",s={unversionedId:"guides/questions/store",id:"guides/questions/store",title:"Store answers",description:"CliNext can use stored answers automatically for you. Simply turn the `storeValue` parameter to `true` and `loadFromStoreOnInit` to `true`.",source:"@site/docs/guides/questions/store.mdx",sourceDirName:"guides/questions",slug:"/guides/questions/store",permalink:"/documentation/docs/next/guides/questions/store",draft:!1,editUrl:"https://github.com/clinext-core/documentation/tree/main/packages/create-docusaurus/templates/shared/docs/guides/questions/store.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Structure questions in the app",permalink:"/documentation/docs/next/guides/questions/structure"},next:{title:"Remote questions",permalink:"/documentation/docs/next/guides/questions/remote"}},u={},l=[{value:"Example",id:"example",level:2}],c={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(p,(0,r.c)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"store-answers"},"Store answers"),(0,o.yg)("p",null,"CliNext can use stored answers automatically for you. Simply turn the ",(0,o.yg)("inlineCode",{parentName:"p"},"storeValue")," parameter to ",(0,o.yg)("inlineCode",{parentName:"p"},"true")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"loadFromStoreOnInit")," to ",(0,o.yg)("inlineCode",{parentName:"p"},"true"),"."),(0,o.yg)("h2",{id:"example"},"Example"),(0,o.yg)("p",null,"We want to ask questions depending on the type of engine the user chooses.\nThe questions are available on our server with a GET request."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-js"},"export default ({\n  _clinextType: 'command',\n  ...\n  questions: [\n    {\n      name: 'registryUsername',\n      storeValue: true,\n      loadFromStoreOnInit: true,\n      storeDomain: CliNext.env.API_HOST\n    }    \n  ],\n  ...\n})\n")))}d.isMDXComponent=!0}}]);